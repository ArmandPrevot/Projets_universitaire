package event;

import java.util.EnumMap;
import java.util.List;

import card.Card;
import card.Island;
import resources.TypeResource;
/**
 * The class Choice Exploit transit between clients and the server, in order to handle the ChoiceExploit event.
 */
public class ChoiceExploit {
	
	/** Enum map that represent all the ressources of a player */
	private EnumMap<TypeResource, Integer> listResourcesPlayer;
	
	/** List that represent all the islands **/
	private List<Island> islands;
	
	/** Random Integer that represent a island Id */
	private int randIsland;
	
	/** Random Integer that represent a card Id */
	private int randCard;
	
	/**
	 * Represents the cards list of the player
	 */
	private List<Card> listCard;

	/**Return all the ressources of a player
	 * @return the listResourcesPlayer
	 */
	public EnumMap<TypeResource, Integer> getListResourcesPlayer() {
		return listResourcesPlayer;
	}

	/**Set in listResourcesPlayer all the ressources of a player
	 * @param listResourcesPlayer the listResourcesPlayer to set
	 */
	public void setListResourcesPlayer(EnumMap<TypeResource, Integer> listResourcesPlayer) {
		this.listResourcesPlayer = listResourcesPlayer;
	}

	/**Return the list of Islands (all island)
	 * @return the islands
	 */
	public List<Island> getIslands() {
		return islands;
	}

	/**Set the list of Islands (all island)
	 * @param islands the islands to set
	 */
	public void setIslands(List<Island> islands) {
		this.islands = islands;
	}

	/**Return random id Island
	 * @return the randIsland
	 */
	public int getRandIsland() {
		return randIsland;
	}

	/**Set one id of all Islands
	 * @param randIsland the randIsland to set
	 */
	public void setRandIsland(int randIsland) {
		this.randIsland = randIsland;
	}

	/**Return random id Card
	 * @return the randCard
	 */
	public int getRandCard() {
		return randCard;
	}

	/**Set one id of all Card in the selected Island
	 * @param randCard the randCard to set
	 */
	public void setRandCard(int randCard) {
		this.randCard = randCard;
	}

	/**Return the list of Card in the selected Island
	 * @return the listCard
	 */
	public List<Card> getListCard() {
		return listCard;
	}

	/**Set the list of Card in the selected Island
	 * @param listCard the listCard to set
	 */
	public void setListCard(List<Card> listCard) {
		this.listCard = listCard;
	}
	
}
